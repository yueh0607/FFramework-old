
/*******************************************************
 * Code Generated By FFramework
 * DateTime : 2024/2/7 14:05:04
 * UVersion : 2021.3.29f1
 *******************************************************/
using FFramework.MVVM;
using FFramework.RefCache;
using System;
using UnityEngine;

namespace FFramework.MVC.RefCache
{
    public class PlayerVM : ViewModel<FFramework.MVC.RefCache.Player>, IUpdate
    {

        CharacterConfigItem config;

        public async override FTask OnLoad()
        {
            TView.InitRefs();

            var model = MVVM.MV.GetModel<CharacterConfigModel>();
            config = model.Data[0];

            //(初始头角度以摄象机为准)
            currentRotationY = TView.Camera_Camera.transform.localEulerAngles.x;
            TView.Head_Transform.localEulerAngles = TView.Head_Transform.localEulerAngles
                .SetX(TView.Camera_Camera.transform.localEulerAngles.x);
            Debug.Log(currentRotationY);

            //启动Update
            this.EnableUpdate();
            await FTask.CompletedTask;
        }


        public async override FTask OnUnload()
        {
            //关闭Update
            this.DisableUpdate();
            await FTask.CompletedTask;
        }


        float currentRotationY;
        void IUpdate.Update(float deltaTime)
        {
            float mouseX = Input.GetAxis("Mouse X");
            float mouseY = Input.GetAxis("Mouse Y");

            currentRotationY -= mouseY * config.rotationSensitivity;
            currentRotationY = Math.Clamp(currentRotationY, -config.maxPitchDown, config.maxPitchUp);
            Debug.Log(currentRotationY); 

            //横向旋转角色
            TView.transform.Rotate(new Vector3(0,mouseX , 0));
            //纵向旋转头和相机
            TView.Head_Transform.localEulerAngles =  currentRotationY * Vector3.right;
            TView.Camera_Camera.transform.localEulerAngles = TView.Head_Transform.localEulerAngles;
        }
    }
}

