
/*******************************************************
 * Code Generated By FFramework
 * DateTime : 2024/3/6 8:36:54
 * UVersion : 2021.3.29f1
 *******************************************************/
using FFramework;
using FFramework.MVVM;
using UnityEngine;

namespace FFramework.MVVM.RefCache
{
    public class FollowCameraVM : FFramework.MVVM.ViewModel<FFramework.MVVM.RefCache.FollowCamera>,IUpdate
    {
        //Select Text And Press Ctrl + K + U to uncomment.

        public override async FTask OnLoad()
        {
            TView.InitRefs();
            this.EnableUpdate();
            await FTask.CompletedTask;
        }

        public override async FTask OnUnload()
        {
            syncStart = false;
            this.DisableUpdate();
            await FTask.CompletedTask;
        }


        //同步目标
        Transform target;

        bool syncStart = false;
        
        /// <summary>
        /// 是否已经开启同步
        /// </summary>
        public bool SyncStarted => syncStart;


        /// <summary>
        /// 设置跟随目标并开启同步
        /// </summary>
        /// <param name="target"></param>
        public void SetFollow(Transform target)
        {
            this.target = target;
            syncStart = true;
        }

        /// <summary>
        /// 停止同步
        /// </summary>
        public void DisableFollow()
        {
            syncStart = false;
        }


        void IUpdate.Update(float deltaTime)
        {
            if (!syncStart) return;
            var model = MV.GetModel<CameraFollowModel>();
            //偏移值
            Vector3 delta = TView.FollowCamera_Transform.position- model.offset - target.position;
            //插值同步
            TView.FollowCamera_Transform.position = Vector3.Lerp(TView.transform.position,
                target.transform.position + model.offset, model.syncSpeed);
        }
    }
}

